#include <wiringPi.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Define constants for LED colors
const char* LED_COLORS[] = {"crvena", "zelena", "plava","zuta","bela"};

// Initialize hardware pins
const int xAxisPin = 2;   // GPIO 2 (Physical pin 3) (WiringPi 8)
const int yAxisPin = 3;   // GPIO 3 (Physical pin 5) (WiringPi 9)
const int buttonPin = 4;  // GPIO 4 (Physical pin 7) (WiringPi 7)

const int ledLeftPin = 14;   // GPIO 14 (Physical pin 8) (WiringPi 15)
const int ledMiddlePin = 15; // GPIO 15 (Physical pin 10) (WiringPi 16)
const int ledRightPin = 18;  // GPIO 18 (Physical pin 12) (WiringPi 1)
const int ledUpPin = 17;     // GPIO 17 (Physical pin 11) (WiringPi 0)
const int ledDownPin = 27;   // GPIO 27 (Physical pin 13) (WiringPi 2)

void lightLed(int ledPin) {
    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(200);
}

void playRound(const int ledPins[], int numSequences) {
    const int maxColors = 5;
    char* sequence[maxColors];

    for (int i = 0; i < numSequences; ++i) {
        char* color = LED_COLORS[rand() % maxColors];
        sequence[i] = color;

        for (int colorIndex = 0; colorIndex < maxColors; ++colorIndex) {
            if (strcmp(color, LED_COLORS[colorIndex]) == 0) {
                lightLed(ledPins[colorIndex]);
            }
        }
    }

    printf("Watch the sequence and repeat it!\n");

    for (int i = 0; i < numSequences; ++i) {
        for (int colorIndex = 0; colorIndex < maxColors; ++colorIndex) {
            if (strcmp(sequence[i], LED_COLORS[colorIndex]) == 0) {
                lightLed(ledPins[colorIndex]);
                delay(500);
                break;
            }
        }
    }

    printf("Your turn to repeat the sequence!\n");

    for (int i = 0; i < numSequences; ++i) {
        while (1) {
            int xValue = analogRead(xAxisPin);
            int yValue = analogRead(yAxisPin);

            if (xValue <= 600) {
                digitalWrite(ledLeftPin, HIGH);
            } else if (xValue >= 60000) {
                digitalWrite(ledRightPin, HIGH);
            } else if (yValue <= 600) {
                digitalWrite(ledUpPin, HIGH);
            } else if (yValue >= 60000) {
                digitalWrite(ledDownPin, HIGH);
            } else {
                digitalWrite(ledLeftPin, LOW);
                digitalWrite(ledRightPin, LOW);
                digitalWrite(ledUpPin, LOW);
                digitalWrite(ledDownPin, LOW);
            }

            if (digitalRead(buttonPin) == LOW) {
                if (strcmp(sequence[i], LED_COLORS[0]) == 0 && digitalRead(ledLeftPin) == HIGH) {
                    break;
                } else if (strcmp(sequence[i], LED_COLORS[1]) == 0 && digitalRead(ledMiddlePin) == HIGH) {
                    break;
                } else if (strcmp(sequence[i], LED_COLORS[2]) == 0 && digitalRead(ledRightPin) == HIGH) {
                    break;
                } else {
                    printf("Pogresna boja! Game over.\n");
                    exit(0);
                }
            }
        }
    }

    printf("Cestitke! Presli ste nivo.\n");

    // da ti potvrdi da si presao nivo, sve lampice se upale
    digitalWrite(ledLeftPin, HIGH);
    digitalWrite(ledMiddlePin, HIGH);
    digitalWrite(ledRightPin, HIGH);
    digitalWrite(ledUpPin, HIGH);
    digitalWrite(ledDownPin, HIGH);
    delay(1000);
    digitalWrite(ledLeftPin, LOW);
    digitalWrite(ledMiddlePin, LOW);
    digitalWrite(ledRightPin, LOW);
    digitalWrite(ledUpPin, LOW);
    digitalWrite(ledDownPin, LOW);
    delay(1000);
}

int main() {
    srand(time(NULL));
    wiringPiSetupGpio();

    pinMode(xAxisPin, INPUT);
    pinMode(yAxisPin, INPUT);
    pinMode(buttonPin, INPUT);

    pinMode(ledLeftPin, OUTPUT);
    pinMode(ledMiddlePin, OUTPUT);
    pinMode(ledRightPin, OUTPUT);
    pinMode(ledUpPin, OUTPUT);
    pinMode(ledDownPin, OUTPUT);

    int level = 1;

    while (1) {
        printf("Simon Says Game - Nivo %d\n", level);

        int numSequences = level;
        int ledPins[] = {ledLeftPin, ledMiddlePin, ledRightPin, ledUpPin, ledDownPin};

        playRound(ledPins, numSequences);

        delay(2000);  // Delay before starting the next level
        level++;
    }

    return 0;
}
